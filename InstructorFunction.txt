-- Create the UpdateLessonCount stored procedure with a specified return type
CREATE OR REPLACE FUNCTION UpdateLessonCount(
    IN student_id INT,
    IN new_estimated_lessons INT,
    OUT result text
)
AS $$
BEGIN
    -- Update the estimated number of lessons for the given student
    UPDATE Assessment
    SET EstimatedLessons = new_estimated_lessons
    WHERE StudentID = student_id;
   
   -- Set the result to indicate success
   result := 'Estimated lessons updated successfully.';
   
exception 
    WHEN NO_DATA_FOUND then 
         -- Handle the case where no assessment is found for the student 
        result := 'No assessment found for the student.';  
    WHEN OTHERS then  
        -- Handle other exceptions 
        result := 'An error occurred.'; 
END; 
$$ LANGUAGE plpgsql; 




















-- Example of calling the stored procedure to update the estimated lessons for a student
DO $$
DECLARE
    student_id INT := 1;  -- Replace with the desired StudentID
    new_lessons INT := 10;  -- Replace with the new estimated lessons
BEGIN
    -- Call the stored procedure to update the estimated lessons
    PERFORM UpdateLessonCount(student_id, new_lessons);
    
    -- Check if the update was successful
    IF FOUND THEN
        RAISE NOTICE 'Estimated lessons updated for Student % to %', student_id, new_lessons;
    ELSE
        RAISE NOTICE 'No assessment found for Student %', student_id;
    END IF;
END;
$$;


select * from assessment;

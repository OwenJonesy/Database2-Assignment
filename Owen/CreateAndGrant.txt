-- DROP TABLES

-- Drop the tables if they exist (in the reverse order of creation to avoid foreign key constraints)
DROP TABLE IF EXISTS "Drive857A".Payment;
DROP TABLE IF EXISTS "Drive857A".Assessment;
DROP TABLE IF EXISTS "Drive857A".Booking;
DROP TABLE IF EXISTS "Drive857A".Lesson;
DROP TABLE IF EXISTS "Drive857A".Instructor;
DROP TABLE IF EXISTS "Drive857A".DrivingStudent;
DROP TABLE IF EXISTS "Drive857A".BookingStaff;

-- CREATE TABLES

-- Create the DrivingStudent table (formerly Student)
CREATE TABLE "Drive857A".DrivingStudent (
    StudentID SERIAL PRIMARY KEY,
    Name VARCHAR(255),
    RegistrationNumber VARCHAR(50) UNIQUE,
    NCTStatus VARCHAR(50),
    AmountDue INT
);

-- Create the Instructor table without the Availability column
CREATE TABLE "Drive857A".Instructor (
    InstructorID SERIAL PRIMARY KEY,
    Name VARCHAR(255)
);

-- Create the Lesson table with StudentID
CREATE TABLE "Drive857A".Lesson (
    LessonID SERIAL PRIMARY KEY,
    StudentID INT, -- Add StudentID
    LessonNumber INT,
    LessonTopic VARCHAR(255)
);

-- Add a foreign key constraint to link StudentID to DrivingStudent's StudentID
ALTER TABLE "Drive857A".Lesson
ADD CONSTRAINT fk_lesson_student
FOREIGN KEY (StudentID)
REFERENCES "Drive857A".DrivingStudent(StudentID);

-- Create the BookingStaff table
CREATE TABLE "Drive857A".BookingStaff (
    StaffID SERIAL PRIMARY KEY,
    Name VARCHAR(255),
    Role VARCHAR(255)
);

-- Create the Booking table
CREATE TABLE "Drive857A".Booking (
    BookingID SERIAL PRIMARY KEY,
    StudentID INT,
    InstructorID INT,
    LessonID INT,
    StaffID INT,
    DateTime TIMESTAMP,
    FOREIGN KEY (StudentID) REFERENCES "Drive857A".DrivingStudent(StudentID),
    FOREIGN KEY (InstructorID) REFERENCES "Drive857A".Instructor(InstructorID),
    FOREIGN KEY (LessonID) REFERENCES "Drive857A".Lesson(LessonID),
    FOREIGN KEY (StaffID) REFERENCES "Drive857A".BookingStaff(StaffID)
);

-- Create the Assessment table
CREATE TABLE "Drive857A".Assessment (
    AssessmentID SERIAL PRIMARY KEY,
    StudentID INT,
    InstructorID INT,
    EstimatedLessons INT,
    AssessmentDate DATE,
    FOREIGN KEY (StudentID) REFERENCES "Drive857A".DrivingStudent(StudentID),
    FOREIGN KEY (InstructorID) REFERENCES "Drive857A".Instructor(InstructorID)
);

-- Create the Payment table
CREATE TABLE "Drive857A".Payment (
    PaymentID SERIAL PRIMARY KEY,
    StudentID INT,
    Amount DECIMAL(10, 2),
    PaymentDate DATE,
    PaymentMethod VARCHAR(50),
    FOREIGN KEY (StudentID) REFERENCES "Drive857A".DrivingStudent(StudentID)
);

-- INSERTS

-- Insert sample data into the "DrivingStudent" table
INSERT INTO "Drive857A".DrivingStudent (Name, RegistrationNumber, NCTStatus, AmountDue)
VALUES ('John Doe', 'DS12345', 'Valid', 480),
       ('Jane Smith', 'DS67890', 'Expired', 480),
       ('Alice Johnson', 'DS11111', 'Valid', 480),
       ('Bob Wilson', 'DS22222', 'Expired', 480);

-- Insert sample data into the "Instructor" table
INSERT INTO "Drive857A".Instructor (Name)
VALUES ('Instructor A'),
       ('Instructor B'),
       ('Instructor C'),
       ('Owen');

-- Insert sample data into the "Lesson" table
INSERT INTO "Drive857A".Lesson (StudentID, LessonNumber, LessonTopic)
VALUES (1, 1, 'Parallel Parking'),
       (2, 2, 'Lane Change'),
       (3, 3, 'Parking on a Hill'),
       (4, 4, 'Intersection Right of Way');

-- Insert sample data into the "BookingStaff" table
INSERT INTO "Drive857A".BookingStaff (Name, Role)
VALUES ('Staff Member 1', 'Booking Agent'),
       ('Staff Member 2', 'Coordinator'),
       ('Staff Member 3', 'Coordinator'),
       ('Gav', 'Booking Agent');

-- Insert sample data into the "Booking" table
INSERT INTO "Drive857A".Booking (StudentID, InstructorID, LessonID, DateTime, StaffID)
VALUES (1, 1, 1, '2023-10-25 09:00:00', 1),
       (2, 2, 2, '2023-10-26 10:00:00', 2),
       (3, 3, 3, '2023-10-27 11:00:00', 1),
       (4, 4, 4, '2023-10-28 14:00:00', 2);

-- Insert sample data into the "Assessment" table
INSERT INTO "Drive857A".Assessment (StudentID, InstructorID, EstimatedLessons, AssessmentDate)
VALUES (1, 1, 10, '2023-10-30'),
       (2, 2, 8, '2023-11-01'),
       (3, 3, 9, '2023-10-30'),
       (4, 4, 7, '2023-11-02');

-- Insert sample data into the "Payment" table
INSERT INTO "Drive857A".Payment (StudentID, Amount, PaymentDate, PaymentMethod)
VALUES (1, 200.00, '2023-10-25', 'Credit Card'),
       (2, 180.00, '2023-10-26', 'Cheque'),
       (3, 250.00, '2023-10-27', 'Credit Card'),
       (4, 210.00, '2023-10-28', 'Cash');


-- Grant permissions
      
--Gav

GRANT SELECT, INSERT, UPDATE, TRIGGER ON TABLE "Drive857A".DrivingStudent TO "C21483936";
GRANT SELECT, INSERT, UPDATE, TRIGGER ON TABLE "Drive857A".Lesson TO "C21483936";
GRANT SELECT, INSERT, UPDATE, TRIGGER ON TABLE "Drive857A".Assessment TO "C21483936";
GRANT SELECT, INSERT, UPDATE, TRIGGER ON TABLE "Drive857A".Booking TO "C21483936";
GRANT USAGE, SELECT ON SEQUENCE "Drive857A".drivingstudent_studentid_seq TO "C21483936";
GRANT USAGE, SELECT ON SEQUENCE "Drive857A".lesson_lessonid_seq TO "C21483936";
GRANT USAGE, SELECT ON SEQUENCE "Drive857A".assessment_assessmentid_seq TO "C21483936";
GRANT USAGE, SELECT ON SEQUENCE "Drive857A".booking_bookingid_seq TO "C21483936";
GRANT EXECUTE ON FUNCTION "Drive857A".create_booking TO "C21483936";
GRANT EXECUTE ON FUNCTION "Drive857A".add_student TO "C21483936";


-- owen
GRANT EXECUTE ON FUNCTION "Drive857A".UpdateAssessment TO "C21377551";
GRANT EXECUTE ON FUNCTION "Drive857A".UpdateLessonCount TO "C21377551";
GRANT SELECT, INSERT, UPDATE, TRIGGER ON TABLE "Drive857A".Assessment TO "C21377551";
GRANT SELECT, INSERT, UPDATE, TRIGGER ON TABLE "Drive857A".drivingstudent TO "C21377551";
GRANT USAGE, SELECT ON SEQUENCE "Drive857A".assessment_assessmentid_seq TO "C21483936";
GRANT USAGE, SELECT ON SEQUENCE "Drive857A".drivingstudent_studentid_seq TO "C21483936";


-- Ste
GRANT EXECUTE ON FUNCTION "Drive857A".InsertPayment TO "C21377551";
GRANT SELECT, INSERT, UPDATE, TRIGGER ON TABLE "Drive857A".drivingstudent TO "C21760305";
GRANT SELECT, INSERT, UPDATE, TRIGGER ON TABLE "Drive857A".payment TO "C21760305";
GRANT USAGE, SELECT ON SEQUENCE "Drive857A".payment_paymentid_seq TO "C21760305";
GRANT USAGE, SELECT ON SEQUENCE "Drive857A".drivingstudent_studentid_seq TO "C21760305";



select * from lesson;
select * from assessment;
select * from booking;
select * from bookingstaff;
select * from drivingstudent;
select * from instructor;
select * from payment;
-- Commit the changes
COMMIT;